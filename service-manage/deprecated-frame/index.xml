<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>日落组件 on Document</title>
    <link>https://jianda1024.github.io/service-manage/deprecated-frame/</link>
    <description>Recent content in 日落组件 on Document</description>
    <generator>Hugo</generator>
    <language>doc</language>
    <atom:link href="https://jianda1024.github.io/service-manage/deprecated-frame/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eureka</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/eureka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/eureka/</guid>
      <description>&lt;h1 id=&#34;eureka&#34;&gt;&#xD;&#xA;  Eureka&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#eureka&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;eureka-1&#34;&gt;&#xD;&#xA;  Eureka&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#eureka-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;服务注册中心&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一个基于 REST 的服务，用于定位服务，以实现云端中间层服务发现和故障转移。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;工作原理&#34;&gt;&#xD;&#xA;  工作原理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Eureka 采用了 C-S 的设计架构。&lt;/li&gt;&#xA;&lt;li&gt;Eureka Server 作为服务注册功能的服务器，是服务注册中心。&lt;/li&gt;&#xA;&lt;li&gt;而系统中的其他微服务，使用 Eureka Client 连接到 Eureka Server 并维持心跳连接。&lt;/li&gt;&#xA;&lt;li&gt;这样系统的维护人员就可以通过 Eureka Server 来监控系统中各个微服务是否正常运行。&lt;/li&gt;&#xA;&lt;li&gt;SpringCloud 的其他模块（比如Zuul）就可以通过 Eureka Server 来发现系统中的其他微服务，并执行相关的逻辑。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;核心组件&#34;&gt;&#xD;&#xA;  核心组件&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%b8%e5%bf%83%e7%bb%84%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Eureka Server&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ribbon</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/ribbon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/ribbon/</guid>
      <description>&lt;h1 id=&#34;ribbon&#34;&gt;&#xD;&#xA;  Ribbon&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ribbon&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;ribbon-1&#34;&gt;&#xD;&#xA;  Ribbon&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ribbon-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;负载均衡&lt;/li&gt;&#xA;&lt;li&gt;是一个基于 HTTP 和 TCP 的客户端负载均衡工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;工作原理&#34;&gt;&#xD;&#xA;  工作原理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先访问注册中心，获取可用的服务列表&lt;/li&gt;&#xA;&lt;li&gt;再根据用户指定的策略，再从服务列表中选择一个地址。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://jianda1024.github.io/img/2022Q2/img_2022-05-21_011025.png&#34; width=&#34;650&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;ribbon-自带-lb-策略&#34;&gt;&#xD;&#xA;  Ribbon 自带 LB 策略&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ribbon-%e8%87%aa%e5%b8%a6-lb-%e7%ad%96%e7%95%a5&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Load Balance，即负载均衡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://jianda1024.github.io/img/2022Q2/img_2022-05-21_011709.png&#34; width=&#34;650&#34;/&gt;</description>
    </item>
    <item>
      <title>Feign</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/feign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/feign/</guid>
      <description>&lt;h1 id=&#34;feign&#34;&gt;&#xD;&#xA;  Feign&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#feign&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;feign-1&#34;&gt;&#xD;&#xA;  Feign&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#feign-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务调用&lt;/li&gt;&#xA;&lt;li&gt;Feign 集成了 Ribbon，是一个&lt;strong&gt;声明式&lt;/strong&gt;的Web服务客户端&lt;/li&gt;&#xA;&lt;li&gt;使得编写Web服务客户端变得非常容易，只需要创建一个接口，然后在上面添加注解即可。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hystrix</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/hystrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/hystrix/</guid>
      <description>&lt;h1 id=&#34;hystrix&#34;&gt;&#xD;&#xA;  Hystrix&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hystrix&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;hystrix-1&#34;&gt;&#xD;&#xA;  Hystrix&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hystrix-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务降级&lt;/li&gt;&#xA;&lt;li&gt;是一个用于处理分布式系统的&lt;strong&gt;延迟&lt;/strong&gt;和&lt;strong&gt;容错&lt;/strong&gt;的开源库&lt;/li&gt;&#xA;&lt;li&gt;能保证在一个依赖出问题的情况下，不会导致整体服务失败，避免级联故障，以提高分布式系统的弹性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;工作原理&#34;&gt;&#xD;&#xA;  工作原理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当某个服务单元发生故障之后，通过断路器的故障监控（类似熔断保险丝），&lt;/li&gt;&#xA;&lt;li&gt;向调用方返回一个符合预期的、可处理的备选响应，而不是长时间的等待或者抛出调用方无法处理的异常，&lt;/li&gt;&#xA;&lt;li&gt;这样就保证了服务调用方的线程不会被长时间、不必要地占用，从而避免了故障在分布式系统中蔓延乃至雪崩。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;扇入扇出&#34;&gt;&#xD;&#xA;  扇入、扇出&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%87%e5%85%a5%e6%89%87%e5%87%ba&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;扇入：表示一个模块被多个模块调用&lt;/li&gt;&#xA;&lt;li&gt;扇出：表示一个模块调用多个模块。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;雪崩效应&#34;&gt;&#xD;&#xA;  雪崩效应&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9b%aa%e5%b4%a9%e6%95%88%e5%ba%94&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式系统环境下，应用程序有众多依赖关系。某些情况下，许多依赖不可避免的会调用失败。&lt;/li&gt;&#xA;&lt;li&gt;如果扇出链路上某个微服务不可用，对其的调用就会占用越来越多的系统资源，进而引起系统崩溃。&lt;/li&gt;&#xA;&lt;li&gt;这种因“服务提供者的不可用”导致“服务调用者不可用”，并将不可用逐渐放大的现象，即“雪崩效应”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;服务熔断&#34;&gt;&#xD;&#xA;  服务熔断&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%8d%e5%8a%a1%e7%86%94%e6%96%ad&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当某服务出现不可用或响应超时的情况时，为了防止整个系统出现雪崩，暂时停止对该服务的调用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;服务降级&#34;&gt;&#xD;&#xA;  服务降级&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%8d%e5%8a%a1%e9%99%8d%e7%ba%a7&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从整个系统的负荷情况考虑，对某些负荷会比较高的某些功能（业务场景），当其熔断后将不再被调用。&lt;/li&gt;&#xA;&lt;li&gt;此时客户端可以自己准备一个本地的fallback回调，返回一个缺省值。达到虽服务水平下降但还可用的目的。&lt;/li&gt;&#xA;&lt;li&gt;服务降级处理是在客户端实现完成的，与服务端没有关系&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Zuul</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/zuul/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/zuul/</guid>
      <description>&lt;h1 id=&#34;zuul&#34;&gt;&#xD;&#xA;  Zuul&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#zuul&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;zuul-1&#34;&gt;&#xD;&#xA;  Zuul&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#zuul-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务网关&lt;/li&gt;&#xA;&lt;li&gt;路由：将外部请求转发到具体的微服务实例上，是实现外部访问统一入口的基础&lt;/li&gt;&#xA;&lt;li&gt;过滤：对请求的处理过程进行干预，是实现请求校验、服务聚合等功能的基础&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Config</title>
      <link>https://jianda1024.github.io/service-manage/deprecated-frame/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jianda1024.github.io/service-manage/deprecated-frame/config/</guid>
      <description>&lt;h1 id=&#34;config&#34;&gt;&#xD;&#xA;  Config&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#config&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;config-1&#34;&gt;&#xD;&#xA;  Config&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#config-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;配置中心&lt;/li&gt;&#xA;&lt;li&gt;为微服务框架中的微服务提供统一的外部配置支持&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;工作原理&#34;&gt;&#xD;&#xA;  工作原理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Config Server：分布式配置中心，它是一个独立的微服务，用来连接配置服务器并为客户端提供配置信息&lt;/li&gt;&#xA;&lt;li&gt;Config Client：通过配置中心，获取对应的配置来管理应用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://jianda1024.github.io/img/2022Q2/img_2022-05-21_013810.png&#34; width=&#34;650&#34;/&gt;</description>
    </item>
  </channel>
</rss>
