<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JVM 调优 on IWiki</title>
    <link>https://localhost:1313/program-lang/java/jvm/tuning/</link>
    <description>Recent content in JVM 调优 on IWiki</description>
    <generator>Hugo</generator>
    <language>iwiki</language>
    <atom:link href="https://localhost:1313/program-lang/java/jvm/tuning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JVM 参数</title>
      <link>https://localhost:1313/program-lang/java/jvm/tuning/parameter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-lang/java/jvm/tuning/parameter/</guid>
      <description>&lt;h1 id=&#34;jvm-参数&#34;&gt;&#xD;&#xA;  JVM 参数&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jvm-%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;jvm-参数-1&#34;&gt;&#xD;&#xA;  JVM 参数&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jvm-%e5%8f%82%e6%95%b0-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;标配参数x参数了解&#34;&gt;&#xD;&#xA;  标配参数、X参数（了解）&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%87%e9%85%8d%e5%8f%82%e6%95%b0x%e5%8f%82%e6%95%b0%e4%ba%86%e8%a7%a3&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;div style=&#34;font-weight:400&#34;&gt;-version&lt;/div&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;div style=&#34;font-weight:400&#34;&gt;版本信息&lt;/div&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-help&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;帮助&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-showversion&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;版本详情&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;p/&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xint&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;解释模式，强制   JVM 执行所有的字节码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xcomp&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编译模式，第一次使用就把所有的字节码编译成本地代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xmixed&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;混合模式，将解释模式和编译模式进行混合使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;xx-参数重点&#34;&gt;&#xD;&#xA;  XX 参数（重点）&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xx-%e5%8f%82%e6%95%b0%e9%87%8d%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;布尔类型：-XX:+或-某个属性（+ 表示开启，- 表示关闭）&lt;/li&gt;&#xA;&lt;li&gt;键值类型：-XX:属性键=属性值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;示例&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:-PrintGCDetails&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;关闭：打印GC收集细节&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:+PrintGCDetails&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;开启：打印GC收集细节&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:-UseSerialGC&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;关闭：使用串行垃圾回收器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:+UseSerialGC&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;开启：使用串行垃圾回收器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;p/&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:MetaspaceSize=128m&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;设置元空间的内存大小，默认21m&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-XX:MaxTenuringThreshold=15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;设置GC垃圾年龄阈值，默认15&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;常用-jvm-参数&#34;&gt;&#xD;&#xA;  常用 JVM 参数&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8-jvm-%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;-xms-xmx-xss-xmn&#34;&gt;&#xD;&#xA;  -Xms、-Xmx、-Xss、-Xmn&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-xms-xmx-xss-xmn&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;参数&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xms&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;初始分配内存，默认是物理内存的1/64&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xms 等价于 -XX:InitialHeapSize&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xmx&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;最大分配内存，默认是物理内存的1/4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xmx 等价于 -XX:MaxHeapSize&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xss&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;设置单个线程栈的内存大小，一般默认512K ~ 1024K&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xss 等价于 -XX:ThreadStackSize&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-Xmn&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;设置年轻代的内存大小，一般使用默认值&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-xxmetaspacesize&#34;&gt;&#xD;&#xA;  -XX:MetaspaceSize&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-xxmetaspacesize&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;设置元空间的内存大小，默认21m&lt;/li&gt;&#xA;&lt;li&gt;元空间（Java8）和老年代（Java7）类似，但元空间并不在虚拟机中，而是使用本地内存&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-xxsurvivorratio&#34;&gt;&#xD;&#xA;  -XX:SurvivorRatio&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-xxsurvivorratio&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;配置新生代中 eden 和 S0/S1 空间比例&lt;/p&gt;</description>
    </item>
    <item>
      <title>OOM 问题</title>
      <link>https://localhost:1313/program-lang/java/jvm/tuning/oom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-lang/java/jvm/tuning/oom/</guid>
      <description>&lt;h1 id=&#34;oom-问题&#34;&gt;&#xD;&#xA;  OOM 问题&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#oom-%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;内存溢出&#34;&gt;&#xD;&#xA;  内存溢出&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%86%85%e5%ad%98%e6%ba%a2%e5%87%ba&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Out Of Memory，内存溢出&lt;/li&gt;&#xA;&lt;li&gt;java.lang.OutOfMemoryError&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;OOM&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;异常信息&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;栈内存溢出&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;java.lang.StackOverflowError&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;堆内存溢出&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;java.lang.OutOfMemoryError：Java heap space&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;元空间内存溢出&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;java.lang.OutOfMemoryError：MetaSpace&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;直接内存溢出&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;java.lang.OutOfMemoryError：Direct buffer memory&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;gc-回收时间过长&#34;&gt;&#xD;&#xA;  GC 回收时间过长&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#gc-%e5%9b%9e%e6%94%b6%e6%97%b6%e9%97%b4%e8%bf%87%e9%95%bf&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;java.lang.OutOfMemoryError：GC overhead limit exceeded&lt;/li&gt;&#xA;&lt;li&gt;超过 98% 的时间都在用来做 GC，且回收了不到 2% 的堆内存&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;不能再创建新的线程&#34;&gt;&#xD;&#xA;  不能再创建新的线程&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e8%83%bd%e5%86%8d%e5%88%9b%e5%bb%ba%e6%96%b0%e7%9a%84%e7%ba%bf%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;java.lang.OutOfMemoryError：unable to create new native thread&lt;/li&gt;&#xA;&lt;li&gt;原因：创建了太多的线程，超过系统承载极限&lt;/li&gt;&#xA;&lt;li&gt;解决：想办法减少应用程序创建的线程的数量&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
