<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on IWiki</title>
    <link>https://localhost:1313/program-design/data-structure/</link>
    <description>Recent content in 数据结构 on IWiki</description>
    <generator>Hugo</generator>
    <language>iwiki</language>
    <atom:link href="https://localhost:1313/program-design/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数组</title>
      <link>https://localhost:1313/program-design/data-structure/array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/array/</guid>
      <description>&lt;h1 id=&#34;数组&#34;&gt;&#xD;&#xA;  数组&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;数组-1&#34;&gt;&#xD;&#xA;  数组&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Array&lt;/li&gt;&#xA;&lt;li&gt;是一种线性结构，在物理内存中占据着一块连续空间。&lt;/li&gt;&#xA;&lt;li&gt;数组为每个存储的元素都分配了一个下标（索引） ，下标从0开始且自增连续&lt;/li&gt;&#xA;&lt;li&gt;查询速度快，新增/删除速度慢&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特点&#34;&gt;&#xD;&#xA;  特点&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询速度快&lt;/li&gt;&#xA;&lt;li&gt;新增、删除速度慢&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;查询元素&#34;&gt;&#xD;&#xA;  查询元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9f%a5%e8%af%a2%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;根据索引直接定位&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-26_232750.png&#34; width=&#34;400&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;新增元素&#34;&gt;&#xD;&#xA;  新增元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b0%e5%a2%9e%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;根据索引找到位置&lt;/li&gt;&#xA;&lt;li&gt;把后面的所有元素往后移动&lt;/li&gt;&#xA;&lt;li&gt;插入元素&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-26_232943.png&#34; width=&#34;550&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;删除元素&#34;&gt;&#xD;&#xA;  删除元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;根据索引找到位置&lt;/li&gt;&#xA;&lt;li&gt;删除元素&lt;/li&gt;&#xA;&lt;li&gt;再把后面的所有元素往前移动&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-26_233048.png&#34; width=&#34;550&#34;/&gt;</description>
    </item>
    <item>
      <title>链表</title>
      <link>https://localhost:1313/program-design/data-structure/linked-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/linked-list/</guid>
      <description>&lt;h1 id=&#34;链表&#34;&gt;&#xD;&#xA;  链表&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;链表-1&#34;&gt;&#xD;&#xA;  链表&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Linked List&lt;/li&gt;&#xA;&lt;li&gt;是一种物理存储单元上非连续、非顺序的存储结构&lt;/li&gt;&#xA;&lt;li&gt;数据元素的逻辑顺序，是通过链表中的指针链接次序实现的&lt;/li&gt;&#xA;&lt;li&gt;每个数据元素包含两个部分：存储元素的&lt;strong&gt;数据域&lt;/strong&gt;、指向下一个结点地址的&lt;strong&gt;指针域&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特点&#34;&gt;&#xD;&#xA;  特点&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询速度慢&lt;/li&gt;&#xA;&lt;li&gt;新增、删除速度快&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;查询元素&#34;&gt;&#xD;&#xA;  查询元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9f%a5%e8%af%a2%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;因为数据都是分散存储的，所以只能从第一个数据开始，顺着指针的指向逐一往下查找&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003011.png&#34; width=&#34;550&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;新增元素&#34;&gt;&#xD;&#xA;  新增元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b0%e5%a2%9e%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;顺着指针，查找到位置&lt;/li&gt;&#xA;&lt;li&gt;新增一个元素&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003210.png&#34; width=&#34;550&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;删除元素&#34;&gt;&#xD;&#xA;  删除元素&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;顺着指针，查找到位置&lt;/li&gt;&#xA;&lt;li&gt;删除一个元素&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003241.png&#34; width=&#34;550&#34;/&gt;</description>
    </item>
    <item>
      <title>栈</title>
      <link>https://localhost:1313/program-design/data-structure/stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/stack/</guid>
      <description>&lt;h1 id=&#34;栈&#34;&gt;&#xD;&#xA;  栈&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;栈-1&#34;&gt;&#xD;&#xA;  栈&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stack&lt;/li&gt;&#xA;&lt;li&gt;是一种特殊的线性表&lt;/li&gt;&#xA;&lt;li&gt;限制仅允许在线性表的一端，进行插入和删除操作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特点&#34;&gt;&#xD;&#xA;  特点&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;后进先出（Last In First Out，简称LIFO）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;入栈出栈&#34;&gt;&#xD;&#xA;  入栈出栈&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a5%e6%a0%88%e5%87%ba%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003435.gif&#34; width=&#34;650&#34;/&gt;</description>
    </item>
    <item>
      <title>队列</title>
      <link>https://localhost:1313/program-design/data-structure/queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/queue/</guid>
      <description>&lt;h1 id=&#34;队列&#34;&gt;&#xD;&#xA;  队列&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;队列-1&#34;&gt;&#xD;&#xA;  队列&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%98%9f%e5%88%97-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Queue&lt;/li&gt;&#xA;&lt;li&gt;是一种特殊的线性表&lt;/li&gt;&#xA;&lt;li&gt;限制仅允许在线性表的一端进行插入，在另一端进行删除&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特点&#34;&gt;&#xD;&#xA;  特点&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先进先出（First In First Out，简称FIFO）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;入队出队&#34;&gt;&#xD;&#xA;  入队出队&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a5%e9%98%9f%e5%87%ba%e9%98%9f&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003603.gif&#34; width=&#34;650&#34;/&gt;</description>
    </item>
    <item>
      <title>散列表</title>
      <link>https://localhost:1313/program-design/data-structure/hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/hash/</guid>
      <description>&lt;h1 id=&#34;散列表&#34;&gt;&#xD;&#xA;  散列表&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%a3%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;散列表-1&#34;&gt;&#xD;&#xA;  散列表&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%a3%e5%88%97%e8%a1%a8-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hash&lt;/li&gt;&#xA;&lt;li&gt;也叫哈希表，是一种根据键值对 (key和value) 直接进行访问的数据结构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数据存储&#34;&gt;&#xD;&#xA;  数据存储&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e5%ad%98%e5%82%a8&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用&lt;strong&gt;哈希函数&lt;/strong&gt;计算 key 的哈希值&lt;/li&gt;&#xA;&lt;li&gt;再用哈希值对数组长度取模，得到其余数，即存放位置的数组下标&lt;/li&gt;&#xA;&lt;li&gt;如果该位置已经存储了元素，则使用链表在已有元素的后面进行存储&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_003756.png&#34; width=&#34;600&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;数据查询&#34;&gt;&#xD;&#xA;  数据查询&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e6%9f%a5%e8%af%a2&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用哈希函数计算 key 的哈希值，&lt;/li&gt;&#xA;&lt;li&gt;再用哈希值对数组长度取模，得到存放位置的数组下标&lt;/li&gt;&#xA;&lt;li&gt;对比参数key与节点key是否相同，如果相同则取出节点value&lt;/li&gt;&#xA;&lt;li&gt;如果不相同，则对指向的链表进行线性查找&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;哈希冲突&#34;&gt;&#xD;&#xA;  哈希冲突&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%93%88%e5%b8%8c%e5%86%b2%e7%aa%81&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;两个不同的输入值，根据哈希函数计算出的哈希值取模结果相同的现象&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>树</title>
      <link>https://localhost:1313/program-design/data-structure/tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/tree/</guid>
      <description>&lt;h1 id=&#34;树&#34;&gt;&#xD;&#xA;  树&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;树-1&#34;&gt;&#xD;&#xA;  树&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%91-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tree&lt;/li&gt;&#xA;&lt;li&gt;是由结点和边组成的，不存在环的一种数据结构&lt;/li&gt;&#xA;&lt;li&gt;是一种非线性存储结构，存储的是具有“一对多”关系的数据元素的集合&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特点&#34;&gt;&#xD;&#xA;  特点&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每个结点有零个或多个子结点&lt;/li&gt;&#xA;&lt;li&gt;没有父结点的结点称为根结点&lt;/li&gt;&#xA;&lt;li&gt;每一个非根结点有且只有一个父结点&lt;/li&gt;&#xA;&lt;li&gt;除了根结点外，每个子结点可以分为多个不相交的子树&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;术语&#34;&gt;&#xD;&#xA;  术语&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9c%af%e8%af%ad&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;度&lt;/strong&gt;：结点的子树数目，如图：结点B的度为2&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;树的度&lt;/strong&gt;：树中结点的最大度数，如图：树的度为3&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;树的深度&lt;/strong&gt;：树中结点的最大层数，如图：树的深度为4&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;相互关系&lt;/strong&gt;：祖先、后代、父子、兄弟&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分支结点&lt;/strong&gt;：度大于零的结点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;叶子结点&lt;/strong&gt;：度等于零的结点&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004035.png&#34; width=&#34;450&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;分类&#34;&gt;&#xD;&#xA;  分类&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;二叉树&lt;/strong&gt;：一个结点最多只有两个子结点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;满二叉树&lt;/strong&gt;：除了最后一层，其它层的结点都有两个子结点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;完全二叉树&lt;/strong&gt;：除了最后一层，其他层的结点个数都要达到最大，且最后一层的结点从左到右排列&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;平衡二叉树&lt;/strong&gt;：任意结点都满足：左右子树的高度差不大于1&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;二叉搜索树&lt;/strong&gt;：任意结点都满足：左子结点 &amp;lt; 父结点  &amp;lt; 右子结点&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004243.png&#34; width=&#34;550&#34;/&gt;&#xD;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004310.png&#34; width=&#34;550&#34;/&gt;&#xD;&#xA;&lt;h3 id=&#34;树的遍历&#34;&gt;&#xD;&#xA;  树的遍历&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%91%e7%9a%84%e9%81%8d%e5%8e%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;前序遍历&lt;/strong&gt;：根结点  ==&amp;gt; 左子树  ==&amp;gt; 右子树&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;中序遍历&lt;/strong&gt;：左子树  ==&amp;gt; 根结点  ==&amp;gt; 右子树&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;后序遍历&lt;/strong&gt;：左子树  ==&amp;gt; 右子树 ==&amp;gt; 根结点&lt;/li&gt;&#xA;&lt;li&gt;依据【根结点】位置确定前/中/后序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004450.png&#34; width=&#34;650&#34;/&gt;</description>
    </item>
    <item>
      <title>堆</title>
      <link>https://localhost:1313/program-design/data-structure/heap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/heap/</guid>
      <description>&lt;h1 id=&#34;堆&#34;&gt;&#xD;&#xA;  堆&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a0%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;堆-1&#34;&gt;&#xD;&#xA;  堆&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a0%86-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Heap&lt;/li&gt;&#xA;&lt;li&gt;堆是一颗用数组实现的完全二叉树&lt;/li&gt;&#xA;&lt;li&gt;堆中某个结点的值总是不大于或不小于其父结点的值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004850.png&#34; width=&#34;750&#34;/&gt;</description>
    </item>
    <item>
      <title>图</title>
      <link>https://localhost:1313/program-design/data-structure/graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/program-design/data-structure/graph/</guid>
      <description>&lt;h1 id=&#34;图&#34;&gt;&#xD;&#xA;  图&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h3 id=&#34;图-1&#34;&gt;&#xD;&#xA;  图&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be-1&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Graph&lt;/li&gt;&#xA;&lt;li&gt;是一系列结点的集合，这些顶点通过边进行连接&lt;/li&gt;&#xA;&lt;li&gt;这些结点称为&lt;strong&gt;顶点&lt;/strong&gt;，边是顶点的&lt;strong&gt;有序偶对&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分类&#34;&gt;&#xD;&#xA;  分类&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有向图：边不仅连接两个顶点，并且具有方向&lt;/li&gt;&#xA;&lt;li&gt;无向图：边仅仅连接两个顶点，没有其他含义&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;https://localhost:1313/img/2024Q1/img_2024-03-27_004955.png&#34; width=&#34;500&#34;/&gt;</description>
    </item>
  </channel>
</rss>
