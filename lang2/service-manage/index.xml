<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务治理 on Interview</title>
    <link>http://localhost:1313/lang2/service-manage/</link>
    <description>Recent content in 服务治理 on Interview</description>
    <generator>Hugo</generator>
    <language>lang2</language>
    <atom:link href="http://localhost:1313/lang2/service-manage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot</title>
      <link>http://localhost:1313/lang2/service-manage/spring-boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lang2/service-manage/spring-boot/</guid>
      <description>&lt;h2 id=&#34;---springboot&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringBoot&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springboot&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SpringBoot&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;是一个用来简化新Spring应用的初始搭建以及开发过程的框架&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;优点&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 简化配置依赖&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot通过约定的默认配置和默认依赖，可以自动化配置和快速引入依赖&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 独立运行&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot内嵌了各种servlet容器，应用可以打包为可执行JAR或WAR文件，直接执行&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 应用监控&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot提供了运行时的应用监控，能方便地监控应用程序的运行情况&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 无代码生成和XML配置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot的大部分功能都可以通过配置来实现，无需编写代码或者XML配置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;---springboot-核心注解&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringBoot 核心注解&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springboot-%e6%a0%b8%e5%bf%83%e6%b3%a8%e8%a7%a3&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;注解&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;@SpringBootApplication&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;是一个组合注解，组合了以下三个注解&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;@SpringBootConfiguration&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;标注当前类是一个配置类，是@Configuration的特化版本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;@EnableAutoConfiguration&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;启用自动配置功能&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;@ComponentScan&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;启用组件扫描功能&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;---springboot-启动方式&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringBoot 启动方式&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springboot-%e5%90%af%e5%8a%a8%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在IDE中，直接执行main()方法&lt;/li&gt;&#xA;&lt;li&gt;使用 Maven 或 Gradle 命令来运行&lt;/li&gt;&#xA;&lt;li&gt;打包成可执行 JAR 文件来运行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;---springboot-实现热部署&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringBoot 实现热部署&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springboot-%e5%ae%9e%e7%8e%b0%e7%83%ad%e9%83%a8%e7%bd%b2&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;配置开启&lt;/p&gt;</description>
    </item>
    <item>
      <title>SpringCloud</title>
      <link>http://localhost:1313/lang2/service-manage/spring-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lang2/service-manage/spring-cloud/</guid>
      <description>&lt;h2 id=&#34;---springcloud&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringCloud&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springcloud&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式微服务架构下的一站式解决方案，是各个微服务架构落地技术的有序集合&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=&#34;http://localhost:1313/img/2022Q2/img_2022-05-20_202442.png&#34; width=&#34;900&#34;&gt;&#xD;&#xA;&lt;h2 id=&#34;---springbootspringcloud&#34;&gt;&#xD;&#xA;  &amp;ndash; SpringBoot、SpringCloud&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---springbootspringcloud&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;专注于快速方便的开发单个个体微服务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringCloud：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;关注全局的微服务协调治理框架，它将SpringBoot开发的一个个单体微服务整合并管理起来&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SpringBoot可以离开SpringCloud独立使用开发项目，但是SpringCloud离不开SpringBoot，属于依赖的关系&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;---雪崩效应&#34;&gt;&#xD;&#xA;  &amp;ndash; 雪崩效应&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---%e9%9b%aa%e5%b4%a9%e6%95%88%e5%ba%94&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 分布式系统环境下，各服务之前有依赖关系&#xD;&#xA;2. 由于各种原因，服务不能保证100%可用&#xD;&#xA;3. 如果单个服务不可用，会导致依赖于它的服务不可用，如此循环导致更多的服务不可用&#xD;&#xA;4. 这种将不可用逐渐放大导致系统崩溃的现象，即雪崩效应&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>http://localhost:1313/lang2/service-manage/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lang2/service-manage/nginx/</guid>
      <description>&lt;h2 id=&#34;---nginx&#34;&gt;&#xD;&#xA;  &amp;ndash; Nginx&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---nginx&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;是一个开源的高性能 HTTP 服务器和反向代理服务器&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;优点：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 高并发、高可靠性、低内存消耗&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 配置简单、支持热部署&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 良好的负载均衡和缓存功能&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;---nginx-处理http请求&#34;&gt;&#xD;&#xA;  &amp;ndash; Nginx 处理HTTP请求&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---nginx-%e5%a4%84%e7%90%86http%e8%af%b7%e6%b1%82&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Nginx 是一个高性能的 Web 服务器，能够同时处理大量的并发请求&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 多进程机制&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Nginx包含一个主进程和多个工作进程。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;主进程主要负责调度管理工作进程，工作进程则负责处理用户的请求&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 异步非阻塞机制&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;工作进程接收到客户端的请求以后，会调用IO进行处理，&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;当发生等待时，工作线程会注册一个事件，转而去处理其他的请求&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;当IO返回时，就会触发该事件，工作线程会继续执行该未完成的请求&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Dubbo</title>
      <link>http://localhost:1313/lang2/service-manage/dubbo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lang2/service-manage/dubbo/</guid>
      <description>&lt;h2 id=&#34;---dubbo&#34;&gt;&#xD;&#xA;  &amp;ndash; Dubbo&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---dubbo&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;是一款高性能、轻量级的开源Java RPC框架&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;---dubbo-工作原理&#34;&gt;&#xD;&#xA;  &amp;ndash; Dubbo 工作原理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---dubbo-%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0. 服务容器负责启动、加载、运行服务提供者。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 服务提供者向注册中心注册自己提供的服务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 服务消费者向注册中心订阅自己消费的服务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 注册中心通知服务消费者，服务节点的变更&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 服务消费者基于负载均衡算法，从服务列表中选一台进行调用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. 服务消费者/提供者，将调用信息发送到监控中心&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;http://localhost:1313/img/2024Q3/img_2024-08-20_013638.png&#34; width=&#34;800&#34;/&gt;&#xD;&#xA;&lt;h2 id=&#34;---dubbo-负载均衡策略&#34;&gt;&#xD;&#xA;  &amp;ndash; Dubbo 负载均衡策略&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---dubbo-%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1%e7%ad%96%e7%95%a5&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;策略&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;策略&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;随机策略&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;random&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;随机选择一个可用的服务节点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;轮询策略&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;roundrobin&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按公平轮询的方式选择服务节点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;最少活跃数策略&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;leastactive&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;优先选择活跃调用数最少的服务节点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;一致性哈希策略&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;consistenthash&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;通过哈希算法将相同参数的请求发送到同一个服务节点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;---dubbospring-cloud&#34;&gt;&#xD;&#xA;  &amp;ndash; Dubbo、Spring Cloud&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---dubbospring-cloud&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Dubbo&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Spring Cloud&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;所属厂商&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;阿里系的分布式服务治理框架&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Apache 旗下的 Spring 体系下的微服务解决方案&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;通信机制&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;RPC 通信&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;基于 HTTP 的 REST 方式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;技术维度&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;只是实现了服务治理&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;覆盖了微服务架构下的方方面面&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;---dubbozookeeper&#34;&gt;&#xD;&#xA;  &amp;ndash; Dubbo、Zookeeper&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---dubbozookeeper&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dubbo推荐使用Zookeeper作为服务的注册中心&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zookeeper</title>
      <link>http://localhost:1313/lang2/service-manage/zookeeper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lang2/service-manage/zookeeper/</guid>
      <description>&lt;h2 id=&#34;---zookeeper&#34;&gt;&#xD;&#xA;  &amp;ndash; Zookeeper&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---zookeeper&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;是一个开源的分布式的服务协调框架&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;特点&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;数据一致性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;每个server都保存了一份相同的数据副本，client无论连接到哪个server，数据都是一致的&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;请求顺序性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;来自同一个client的更新请求，其发送顺序和最后的执行顺序是一致的&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;可靠性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当一个消息被成功更新后，不会因为网络波动或其他原因而回滚&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;原子性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;更新要不成功要不失败，没有第三个状态&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;独立性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;不同的client之间互不影响&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;实时性&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在一定时间范围内，client能读到最新数据&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;---zookeeper-角色&#34;&gt;&#xD;&#xA;  &amp;ndash; Zookeeper 角色&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---zookeeper-%e8%a7%92%e8%89%b2&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;角色&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;角色&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Leader&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;领导者&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;为客户端提供读服务和写服务。管理集群内的所有事务的顺序，以及维护集群状态的同步&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Follower&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跟随者&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;为客户端提供读服务，参与Leader选举过程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Observer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;观察者&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;为客户端提供读服务，不参与Leader选举过程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;img src=&#34;http://localhost:1313/img/2024Q3/img_2024-08-21_024737.png&#34; width=&#34;850&#34;/&gt;&#xD;&#xA;&lt;h2 id=&#34;---zookeeper-应用场景&#34;&gt;&#xD;&#xA;  &amp;ndash; Zookeeper 应用场景&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---zookeeper-%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 数据发布与订阅&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 命名服务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 配置管理&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 集群管理&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. 分布式通知与协调&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6. 分布式锁&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7. 分布式队列&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
